version: "2.1"
services:
  mysql80:
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci
    container_name: enterprise_access.mysql80
    environment:
      MYSQL_ROOT_PASSWORD: ""
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    # Oracle-packaged version includes a `linux/arm64/v8` version, needed for
    # machines with Apple Silicon CPUs (Mac M1, M2)
    image: mysql:8.0.33-oracle
    networks:
      - devstack_default
    volumes:
      - enterprise_access_mysql80:/var/lib/mysql

  memcache:
    image: memcached:1.6.28
    container_name: enterprise_access.memcache
    networks:
      - devstack_default
    command: memcached -vv

  app:
    image: edxops/enterprise-access-dev
    container_name: enterprise_access.app
    volumes:
      - .:/edx/app/enterprise-access/
      - ../src:/edx/src
    command: bash -c 'while true; do python /edx/app/enterprise-access/manage.py runserver 0.0.0.0:18270; sleep 2; done'
    ports:
      - "18270:18270" # TODO: change this to your port
    depends_on:
      - mysql80
      - memcache
      - worker
    networks:
      - devstack_default
    stdin_open: true
    tty: true
    environment:
      CELERY_ALWAYS_EAGER: 'false'
      CELERY_BROKER_TRANSPORT: redis
      CELERY_BROKER_HOSTNAME: edx.devstack.redis:6379
      CELERY_BROKER_VHOST: 0
      CELERY_BROKER_PASSWORD: password
      DJANGO_SETTINGS_MODULE: enterprise_access.settings.devstack
      DJANGO_WATCHMAN_TIMEOUT: 30
      ENABLE_DJANGO_TOOLBAR: 1

  worker:
    image: edxops/enterprise-access-dev
    command: bash -c 'cd /edx/app/enterprise-access/ && celery -A enterprise_access worker -l DEBUG'
    container_name: enterprise_access.worker
    depends_on:
      - mysql80
      - memcache
    environment:
      CELERY_ALWAYS_EAGER: 'false'
      CELERY_BROKER_TRANSPORT: redis
      CELERY_BROKER_HOSTNAME: edx.devstack.redis:6379
      CELERY_BROKER_VHOST: 0
      CELERY_BROKER_PASSWORD: password
      DJANGO_SETTINGS_MODULE: enterprise_access.settings.devstack
      COLUMNS: 80
    hostname: worker.enterprise_access
    networks:
      - devstack_default
    ports:
      - "18271:18271"
    restart: always
    stdin_open: true
    tty: true
    volumes:
      - .:/edx/app/enterprise-access/

  consume_enterprise_subsidies_transaction_lifecycle:
    image: edxops/enterprise-access-dev
    container_name: enterprise_access.consume_enterprise_subsidies_transaction_lifecycle
    volumes:
      - .:/edx/app/enterprise-access/
      - ../src:/edx/src
    command: bash -c 'while true; do python /edx/app/enterprise-access/manage.py consume_events -t enterprise-subsidies-transaction-lifecycle -g enterprise_access_dev; sleep 2; done'
    ports:
      - "18272:18272"
    depends_on:
      - mysql80
      - memcache
      - worker
    networks:
      - devstack_default
    stdin_open: true
    tty: true
    environment:
      CELERY_ALWAYS_EAGER: 'false'
      CELERY_BROKER_TRANSPORT: redis
      CELERY_BROKER_HOSTNAME: edx.devstack.redis:6379
      CELERY_BROKER_VHOST: 0
      CELERY_BROKER_PASSWORD: password
      DJANGO_SETTINGS_MODULE: enterprise_access.settings.devstack

  consume_enterprise_group_events:
    image: edxops/enterprise-access-dev
    container_name: enterprise_access.consume_enterprise_group_events
    volumes:
      - .:/edx/app/enterprise-access/
      - ../src:/edx/src
    command: >
      bash -c '
        make requirements &&
        pip install edx-event-bus-kafka &&
        pip install -e /edx/src/openedx-events &&
        pip install "confluent-kafka[avro,schema-registry]" &&
        while true; do python /edx/app/enterprise-access/manage.py consume_events -t enterprise-core -g enterprise_access_dev; sleep 2; done
      '
    ports:
      - "18973:18973"
    depends_on:
      - mysql80
      - memcache
    networks:
      - devstack_default
    stdin_open: true
    tty: true
    environment:
      CELERY_ALWAYS_EAGER: 'false'
      CELERY_BROKER_TRANSPORT: redis
      CELERY_BROKER_HOSTNAME: edx.devstack.redis:6379
      CELERY_BROKER_VHOST: 0
      CELERY_BROKER_PASSWORD: password
      EVENT_BUS_KAFKA_SCHEMA_REGISTRY_URL: 'http://edx.devstack.schema-registry:8081'
      EVENT_BUS_KAFKA_BOOTSTRAP_SERVERS: 'edx.devstack.kafka:29092'
      EVENT_BUS_PRODUCER: 'edx_event_bus_kafka.create_producer'
      EVENT_BUS_CONSUMER: 'edx_event_bus_kafka.KafkaEventConsumer'
      EVENT_BUS_TOPIC_PREFIX: 'dev'

networks:
  devstack_default:
    external: true

volumes:
  enterprise_access_mysql80:
