# Generated by Django 4.2.16 on 2024-09-30 16:26

import collections
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import jsonfield.encoder
import jsonfield.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WorkflowActionStep',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='The uuid that uniquely identifies this workflow action step.', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(help_text='The name of the step.', max_length=255)),
                ('action_reference', models.CharField(help_text='Reference to the action (function) executed by this step.', max_length=255)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkflowDefinition',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='The uuid that uniquely identifies this workflow definition.', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(help_text='The name of the workflow.', max_length=255)),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if this workflow is active.')),
                ('is_default', models.BooleanField(default=False, help_text='Indicates if this workflow applies to all customers.')),
                ('enterprise_customer_uuid', models.UUIDField(blank=True, help_text='UUID of the enterprise customer this custom workflow is for.', null=True)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkflowExecutionStatus',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='The uuid that uniquely identifies this workflow execution status.', primary_key=True, serialize=False, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed'), ('aborted', 'Aborted'), ('skipped', 'Skipped')], default='pending', max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Workflow execution statuses',
            },
        ),
        migrations.CreateModel(
            name='WorkflowStepGroup',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='The uuid that uniquely identifies this workflow step group.', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('run_in_parallel', models.BooleanField(default=True, help_text='Indicates if the steps in this group should run in parallel.')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkflowItemThrough',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('action_step', models.ForeignKey(blank=True, help_text='An individual action step', null=True, on_delete=django.db.models.deletion.CASCADE, to='workflows.workflowactionstep')),
                ('step_group', models.ForeignKey(blank=True, help_text='A group of steps', null=True, on_delete=django.db.models.deletion.CASCADE, to='workflows.workflowstepgroup')),
                ('workflow_definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflow_items', to='workflows.workflowdefinition')),
            ],
            options={
                'ordering': ['order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkflowGroupActionStepThrough',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('group', models.ForeignKey(blank=True, help_text='The sub-group within this parent group', null=True, on_delete=django.db.models.deletion.CASCADE, to='workflows.workflowstepgroup')),
                ('step', models.ForeignKey(blank=True, help_text='An individual action step', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='workflows.workflowactionstep')),
                ('step_group', models.ForeignKey(help_text='The group containing steps', on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='workflows.workflowstepgroup')),
            ],
            options={
                'ordering': ['order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkflowExecutionStepStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed'), ('aborted', 'Aborted'), ('skipped', 'Skipped')], default='pending', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, help_text='When the step started', null=True)),
                ('ended_at', models.DateTimeField(blank=True, help_text='When the step was completed (e.g., succeeded or failed)', null=True)),
                ('result', jsonfield.fields.JSONField(blank=True, dump_kwargs={'cls': jsonfield.encoder.JSONEncoder, 'indent': 4, 'separators': (',', ':')}, help_text='Stores the result of the step execution', load_kwargs={'object_pairs_hook': collections.OrderedDict}, null=True)),
                ('error_message', models.TextField(blank=True, help_text='Error message if the step failed', null=True)),
                ('task_id', models.CharField(blank=True, help_text='Task ID for async tracking', max_length=255, null=True)),
                ('metadata', jsonfield.fields.JSONField(blank=True, dump_kwargs={'cls': jsonfield.encoder.JSONEncoder, 'indent': 4, 'separators': (',', ':')}, help_text='Additional metadata related to the step execution', load_kwargs={'object_pairs_hook': collections.OrderedDict}, null=True)),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflow_execution_statuses', to='workflows.workflowactionstep')),
                ('workflow_execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='step_statuses', to='workflows.workflowexecutionstatus')),
            ],
            options={
                'verbose_name_plural': 'Workflow execution step statuses',
            },
        ),
        migrations.AddField(
            model_name='workflowexecutionstatus',
            name='current_step',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_workflow_executions', to='workflows.workflowexecutionstepstatus'),
        ),
        migrations.AddField(
            model_name='workflowexecutionstatus',
            name='executed_steps',
            field=models.ManyToManyField(blank=True, help_text='Steps that have already been successfully executed.', related_name='executed_workflow_executions', to='workflows.workflowexecutionstepstatus'),
        ),
        migrations.AddField(
            model_name='workflowexecutionstatus',
            name='user',
            field=models.ForeignKey(blank=True, help_text='Optionally associate this workflow execution with a user.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workflow_executions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='workflowexecutionstatus',
            name='workflow_definition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflow_executions', to='workflows.workflowdefinition'),
        ),
        migrations.CreateModel(
            name='WorkflowEnterpriseCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enterprise_customer_uuid', models.UUIDField()),
                ('workflow_definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_workflow_enterprise_customers', to='workflows.workflowdefinition')),
            ],
        ),
        migrations.AddConstraint(
            model_name='workflowitemthrough',
            constraint=models.UniqueConstraint(fields=('workflow_definition', 'action_step'), name='unique_action_step_in_workflow'),
        ),
        migrations.AddConstraint(
            model_name='workflowitemthrough',
            constraint=models.UniqueConstraint(fields=('workflow_definition', 'step_group'), name='unique_step_group_in_workflow'),
        ),
        migrations.AddConstraint(
            model_name='workflowgroupactionstepthrough',
            constraint=models.UniqueConstraint(fields=('step_group', 'step'), name='unique_step_in_group'),
        ),
        migrations.AddConstraint(
            model_name='workflowgroupactionstepthrough',
            constraint=models.UniqueConstraint(fields=('step_group', 'group'), name='unique_group_in_group'),
        ),
        migrations.AlterUniqueTogether(
            name='workflowenterprisecustomer',
            unique_together={('workflow_definition', 'enterprise_customer_uuid')},
        ),
    ]
